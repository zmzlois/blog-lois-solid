{
  "resolvedId": "/Users/lois/Documents/GitHub/blog-lois-solid/node_modules/.pnpm/solid-start@0.2.26_@solidjs+meta@0.28.2_@solidjs+router@0.8.2_solid-js@1.7.2_solid-start-node@0.2.19_vite@4.1.4/node_modules/solid-start/root/Document.tsx?v=46ce04b0",
  "transforms": [
    {
      "name": "__load__",
      "result": "import type { JSX } from \"solid-js\";\nimport { children, ComponentProps } from \"solid-js\";\nimport { escape, insert, NoHydration, spread, ssrElement } from \"solid-js/web\";\nimport Links from \"./Links\";\nimport Meta from \"./Meta\";\nimport Scripts from \"./Scripts\";\n\nexport function Html(props: ComponentProps<\"html\">) {\n  if (import.meta.env.START_ISLANDS) {\n    return NoHydration({\n      get children() {\n        return ssrElement(\"html\", props, undefined, false) as unknown as JSX.Element;\n      }\n    });\n  }\n  if (import.meta.env.SSR) {\n    return ssrElement(\"html\", props, undefined, false) as unknown as JSX.Element;\n  }\n  spread(document.documentElement, props, false, true);\n  return props.children;\n}\n\nexport function Head(props: ComponentProps<\"head\">) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\n      \"head\",\n      props,\n      () => (\n        <>\n          {escape(props.children as string)}\n          <Meta />\n          <Links />\n        </>\n      ),\n      false\n    ) as unknown as JSX.Element;\n  } else {\n    spread(document.head, props, false, true);\n    return props.children;\n  }\n}\n\nexport function Body(props: ComponentProps<\"body\">) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\n      \"body\",\n      props,\n      () => (import.meta.env.START_SSR ? escape(props.children as string) : <Scripts />),\n      false\n    ) as unknown as JSX.Element;\n  } else {\n    if (import.meta.env.START_SSR) {\n      let child = children(() => props.children);\n      spread(document.body, props, false, true);\n      insert(\n        document.body,\n        () => {\n          let childNodes = child();\n          if (childNodes) {\n            if (Array.isArray(childNodes)) {\n              let els = childNodes.filter(n => Boolean(n));\n\n              if (!els.length) {\n                return null;\n              }\n\n              return els;\n            }\n            return childNodes;\n          }\n          return null;\n        },\n        null,\n        [...document.body.childNodes]\n      );\n\n      return document.body;\n    } else {\n      spread(document.body, props, false, true);\n      return props.children;\n    }\n  }\n}\n",
      "start": 1686078492815,
      "end": 1686078492815
    },
    {
      "name": "solid",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { memo as _$memo } from \"solid-js/web\";\nimport { children } from \"solid-js\";\nimport { escape, insert, NoHydration, spread, ssrElement } from \"solid-js/web\";\nimport Links from \"./Links\";\nimport Meta from \"./Meta\";\nimport Scripts from \"./Scripts\";\nexport function Html(props) {\n  if (import.meta.env.START_ISLANDS) {\n    return NoHydration({\n      get children() {\n        return ssrElement(\"html\", props, undefined, false);\n      }\n    });\n  }\n  if (import.meta.env.SSR) {\n    return ssrElement(\"html\", props, undefined, false);\n  }\n  spread(document.documentElement, props, false, true);\n  return props.children;\n}\nexport function Head(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"head\", props, () => [_$memo(() => escape(props.children)), _$createComponent(Meta, {}), _$createComponent(Links, {})], false);\n  } else {\n    spread(document.head, props, false, true);\n    return props.children;\n  }\n}\nexport function Body(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"body\", props, () => import.meta.env.START_SSR ? escape(props.children) : _$createComponent(Scripts, {}), false);\n  } else {\n    if (import.meta.env.START_SSR) {\n      let child = children(() => props.children);\n      spread(document.body, props, false, true);\n      insert(document.body, () => {\n        let childNodes = child();\n        if (childNodes) {\n          if (Array.isArray(childNodes)) {\n            let els = childNodes.filter(n => Boolean(n));\n            if (!els.length) {\n              return null;\n            }\n            return els;\n          }\n          return childNodes;\n        }\n        return null;\n      }, null, [...document.body.childNodes]);\n      return document.body;\n    } else {\n      spread(document.body, props, false, true);\n      return props.children;\n    }\n  }\n}",
      "start": 1686078492815,
      "end": 1686078492826,
      "order": "pre"
    },
    {
      "name": "vite:import-analysis",
      "result": "import.meta.env = {\"BASE_URL\":\"/\",\"MODE\":\"development\",\"DEV\":true,\"PROD\":false,\"SSR\":false};import.meta.env.START_SSR = true;import.meta.env.START_ISLANDS = false;import.meta.env.START_ENTRY_CLIENT = \"/Users/lois/Documents/GitHub/blog-lois-solid/src/entry-client.tsx\";import.meta.env.START_ENTRY_SERVER = \"/Users/lois/Documents/GitHub/blog-lois-solid/src/entry-server.tsx\";import.meta.env.START_INDEX_HTML = false;import.meta.env.START_ISLANDS_ROUTER = false;import.meta.env.START_ADAPTER = \"solid-start-node\";import { createComponent as _$createComponent } from \"/node_modules/.vite/deps/solid-js_web.js?v=0b6b363b\";\nimport { memo as _$memo } from \"/node_modules/.vite/deps/solid-js_web.js?v=0b6b363b\";\nimport { children } from \"/node_modules/.vite/deps/solid-js.js?v=0b6b363b\";\nimport { escape, insert, NoHydration, spread, ssrElement } from \"/node_modules/.vite/deps/solid-js_web.js?v=0b6b363b\";\nimport Links from \"/node_modules/.pnpm/solid-start@0.2.26_@solidjs+meta@0.28.2_@solidjs+router@0.8.2_solid-js@1.7.2_solid-start-node@0.2.19_vite@4.1.4/node_modules/solid-start/root/Links.tsx?v=46ce04b0\";\nimport Meta from \"/node_modules/.pnpm/solid-start@0.2.26_@solidjs+meta@0.28.2_@solidjs+router@0.8.2_solid-js@1.7.2_solid-start-node@0.2.19_vite@4.1.4/node_modules/solid-start/root/Meta.tsx?v=46ce04b0\";\nimport Scripts from \"/node_modules/.pnpm/solid-start@0.2.26_@solidjs+meta@0.28.2_@solidjs+router@0.8.2_solid-js@1.7.2_solid-start-node@0.2.19_vite@4.1.4/node_modules/solid-start/root/Scripts.tsx?v=46ce04b0\";\nexport function Html(props) {\n  if (import.meta.env.START_ISLANDS) {\n    return NoHydration({\n      get children() {\n        return ssrElement(\"html\", props, undefined, false);\n      }\n    });\n  }\n  if (import.meta.env.SSR) {\n    return ssrElement(\"html\", props, undefined, false);\n  }\n  spread(document.documentElement, props, false, true);\n  return props.children;\n}\nexport function Head(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"head\", props, () => [_$memo(() => escape(props.children)), _$createComponent(Meta, {}), _$createComponent(Links, {})], false);\n  } else {\n    spread(document.head, props, false, true);\n    return props.children;\n  }\n}\nexport function Body(props) {\n  if (import.meta.env.SSR) {\n    return ssrElement(\"body\", props, () => import.meta.env.START_SSR ? escape(props.children) : _$createComponent(Scripts, {}), false);\n  } else {\n    if (import.meta.env.START_SSR) {\n      let child = children(() => props.children);\n      spread(document.body, props, false, true);\n      insert(document.body, () => {\n        let childNodes = child();\n        if (childNodes) {\n          if (Array.isArray(childNodes)) {\n            let els = childNodes.filter(n => Boolean(n));\n            if (!els.length) {\n              return null;\n            }\n            return els;\n          }\n          return childNodes;\n        }\n        return null;\n      }, null, [...document.body.childNodes]);\n      return document.body;\n    } else {\n      spread(document.body, props, false, true);\n      return props.children;\n    }\n  }\n}",
      "start": 1686078492827,
      "end": 1686078492830,
      "order": "normal"
    }
  ]
}
